apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm_deploy.fullname" . }}
  labels:
    {{- include "helm_deploy.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount.app }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 100%
  selector:
    matchLabels:
      {{- include "helm_deploy.selectorLabels" . | nindent 6 }}
      appName: {{ include "helm_deploy.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "helm_deploy.selectorLabels" . | nindent 8 }}
        app: laa-assess-crime-forms-app
        appName: {{ include "helm_deploy.fullname" . }}
        metrics-target: {{ include "helm_deploy.fullname" . }}-metrics-target
    spec:
      serviceAccountName: {{ .Values.service_account.name }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- include "helm_deploy.defaultSecurityContext" . | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.internalPort }}
              protocol: TCP
            - containerPort: 9394
          livenessProbe:
            httpGet:
              path: /ping
              port: http
          readinessProbe:
            httpGet:
              path: /ping
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 30"] # Workaround for occasional lost requests - see https://github.com/puma/puma/blob/master/docs/kubernetes.md#running-puma-in-kubernetes
          env:
          {{ if .Values.redis.enabled }}
            - name: REDIS_PROTOCOL
              value: "redis"
            - name: REDIS_HOST
              value: {{ template "helm_deploy.redisUatHost" . }}
            - name: REDIS_PASSWORD
              value: {{ .Values.redis.auth.password }}
          {{ else }}
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: crm-elasticache
                  key: primary_endpoint_address
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: crm-elasticache
                  key: auth_token
          {{ end }}
          {{ if .Values.postgresql.enabled }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.postgresqlUsername }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgresql.auth.postgresPassword }}
            - name: POSTGRES_HOST
              value: {{ printf "%s-%s" .Release.Name "postgresql" | trunc 63 | trimSuffix "-" }}
            - name: POSTGRES_DATABASE
              value: {{ .Values.postgresql.auth.database }}
          {{ else }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: rds-postgresql-instance-output
                  key: url
          {{ end }}
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: secret_key_base
            - name: APP_STORE_URL
              value: {{ .Values.variables.appStoreUrl}}
            - name: OMNIAUTH_AZURE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: azure-auth
                  key: client_id
            - name: OMNIAUTH_AZURE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: azure-auth
                  key: client_secret
            - name: OMNIAUTH_AZURE_REDIRECT_URI
              valueFrom:
                secretKeyRef:
                  name: azure-auth
                  key: redirect_uri
            - name: OMNIAUTH_AZURE_TENANT_ID
              valueFrom:
                secretKeyRef:
                  name: azure-auth
                  key: tenant_id
            - name: APP_STORE_TENANT_ID
              valueFrom:
                secretKeyRef:
                  name: app-store-auth
                  key: tenant_id
            - name: APP_STORE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: app-store-auth
                  key: app_client_id
            - name: CASEWORKER_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: app-store-auth
                  key: caseworker_client_id
            - name: CASEWORKER_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-store-auth
                  key: caseworker_client_secret
            - name: RACK_ENV
              value: 'production'
            - name: RAILS_ENV
              value: 'production'
            - name: RAILS_LOG_TO_STDOUT
              value: enabled
            - name: ENV
              value: {{ .Values.variables.environment}}
            - name: IS_LOCAL_DOCKER_ENV
              value: 'true'
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry-dsn
                  key: url
            - name: GOVUK_NOTIFY_API_KEY
              valueFrom:
                secretKeyRef:
                  name: notify-key
                  key: notify_key
            - name: ANALYTICS_TRACKING_ID
              valueFrom:
                secretKeyRef:
                  name: google-analytics
                  key: tracking_key
            - name: S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: s3-policy-arns
                  key: bucket_name
            - name: SIDEKIQ_WEB_UI_USERNAME
              valueFrom:
                secretKeyRef:
                  name: sidekiq-auth
                  key: username
            - name: SIDEKIQ_WEB_UI_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sidekiq-auth
                  key: password
            - name: RAILS_SERVE_STATIC_FILES
              value: 'true'
            - name: OS_API_KEY
              valueFrom:
                secretKeyRef:
                  name: ordnance-survey
                  key: api-key
            - name: HOSTS
              value: {{ range $index, $hostObject := .Values.ingress.hosts }}{{ if ne $index 0 }},{{ end }}{{ $hostObject.host }}{{ end }}
            - name: INTERNAL_HOST_NAME
              value: {{ template "helm_deploy.internalHostName" . }}
            - name: ENABLE_SYNC_TRIGGER_ENDPOINT
              value: '{{ .Values.variables.enableSyncTriggerEndpoint }}'
            - name: ALLOW_INDEXING
              value: '{{ .Values.variables.allowIndexing }}'
            - name: SEND_EMAILS
              value: 'true'
            - name: ENABLE_PROMETHEUS_EXPORTER
              value: 'true'
            - name: METABASE_PA_DASHBOARD_IDS
              value: '{{ .Values.metabase.priorAuthorityDashboardIds}}'
            - name: METABASE_NSM_DASHBOARD_IDS
              value: '{{ .Values.metabase.nsmDashboardIds}}'
            - name: METABASE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: metabase_secret_key
            - name: METABASE_SITE_URL
              value: '{{ .Values.metabase.siteUrl}}'

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
