<%=
    rows = claims.map do |claim|
      [*claim.table_fields]
    end

    govuk_table(html_attributes: {'data-module': 'moj-sortable-table'}) do |table|
      table.with_caption(html_attributes: { class: "govuk-visually-hidden" }, text: t(".table_heading"))

      table.with_head do |head|
        head.with_row do |row|
          row.with_cell(text: t('.laa_reference'))
          row.with_cell(text: t('.firm_name'))
          row.with_cell(text: t('.defendant_name'))
          row.with_cell(html_attributes:{'aria-sort': 'ascending'},text: t('.date_assessed'))
          row.with_cell(html_attributes:{'aria-sort': 'ascending'},text: t('.caseworker_name'))
          row.with_cell(text: t('.status'))
        end
      end

      table.with_body do |body|
        rows.each do |item|
          body.with_row do |row|
            row.with_cell do
                    item[0]
                    govuk_link_to(item[0][:laa_reference], claim_claim_details_path([item[0][:claim_id]]))
                  end
            row.with_cell(text: item[1])
            row.with_cell(text: item[2])
            row.with_cell(text: item[3][:text], html_attributes: { 'data-sort-value': item[3][:sort_value] })
            row.with_cell(text: item[4], html_attributes: { 'data-sort-value': item[4] })
            row.with_cell(html_attributes: { 'data-sort-value': item[5][:text] }) do
                govuk_tag(text: item[5][:text]|'', colour: item[5][:colour])
              end
          end
        end
      end
end
%>
